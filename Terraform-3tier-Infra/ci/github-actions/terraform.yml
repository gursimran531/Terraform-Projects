name: Terraform Plan

on:
  pull_request:
    paths:
      - 'Terraform-3tier-Infra/modules/**'
      - 'Terraform-3tier-Infra/environments/dev/**'
  push:
    branches:
      - main
    paths:
      - 'Terraform-3tier-Infra/modules/**'
      - 'Terraform-3tier-Infra/environments/dev/**'
  release:
    types: [published]
    
jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform-3tier-Infra/environments/dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.13.0'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Initialize
        id: init
        run: terraform  init

      - name: Terraform Format Check
        id: fmt
        run: terraform  fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform  validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform  plan -no-color
        continue-on-error: true

        
      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`hcl
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

                  await github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  })

      - name: Terraform Plan Failure
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terratest - Go
        if: github.event_name == 'pull_request'
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'
        working-directory: Terraform-3tier-Infra/tests/integration
        run:
          go test . -v -timeout 20m
      
      - name: Terraform Apply - Dev
        if: github.event_name == 'push'
        run: terraform apply -auto-approve

      - name: Terraform Apply - Prod
        if: github.event_name == 'release'
        working-directory: Terraform-3tier-Infra/environments/prod
        run: | 
          terraform init
          terraform apply -auto-approve


